@page "/PurchaseRules/Add"
@inject HttpClient http
@inject ISnackbar snackbar;

<MudCard Style="margin-top:20px">
    <MudCardHeader>
        <CardHeaderContent>
            <MudText Typo="Typo.h6">Add new Supplier</MudText>
        </CardHeaderContent>

    </MudCardHeader>
    <MudCardContent>
        <EditForm Model="@PurchaseRule" OnValidSubmit="@HandleValidSubmit">
            <DataAnnotationsValidator />
           @*  <div class="col-2">
                <MudTextField Label="ReOrderLevel" @bind-Value="PurchaseRule.ReOrderLevel" For="@(() => PurchaseRule.ReOrderLevel)" />
            </div>
            
            <div class="col-2">
                <MudTextField Label="MaxOrderQuantity" @bind-Value="PurchaseRule.MaxOrderQuantity" For="@(() => PurchaseRule.MaxOrderQuantity)" />
            </div> *@


            <div class="c-2">
                <MudTextField Label="ReOrderLevel"
                @bind-Value="PurchaseRule.ReOrderLevel" For="@(() => PurchaseRule.ReOrderLevel)" />

            </div>
            <div class="c-2">
                <MudTextField Label="MaxOrderQuantity"
                @bind-Value="PurchaseRule.MaxOrderQuantity" For="@(() => PurchaseRule.MaxOrderQuantity)" />

            </div>
          @*   <div class="col-2">
                <MudTextField Label="PurchaseType"
                @bind-Value="PurchaseRule.PurchaseType" For="@(() => PurchaseRule.PurchaseType)" />
            </div> *@
         <div class="col-2">
                <MudSelect @bind-Value="PurchaseRule.PurchaseType" Label="PurchaseType" AdornmentColor="Color.Secondary">
                    @foreach (PurchaseType item in Enum.GetValues(typeof(PurchaseType)))
                    {
                        <MudSelectItem Value="@item">@item</MudSelectItem>
                    }
                    
                </MudSelect>
                </div>
            <div class="col-2">
                <span></span>
                <div style="display:flex; justify-content:space-between; padding-top:10px;">
                    <MudButton Variant="Variant.Filled" Href="PurchaseRules/List" Color="Color.Dark">Back to</MudButton>
                    <MudButton ButtonType="ButtonType.Submit" Variant="Variant.Filled" Color="Color.Primary" Class="ml-auto">Save</MudButton>
                </div>

            </div>
        </EditForm>
    </MudCardContent>
</MudCard>
@code {
    private PurchaseRule PurchaseRule = new PurchaseRule();


    private async void HandleValidSubmit(EditContext editContext)
    {

        await this.Save();

    }
    private async Task Save()
    {
        var response = await this.http.PostAsJsonAsync<PurchaseRule>("/api/PurchaseRules", this.PurchaseRule);
        if (response.IsSuccessStatusCode)
        {
            this.snackbar.Clear();
            this.snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomCenter;
            this.snackbar.Add("Data saved.", Severity.Success);
            this.PurchaseRule = new PurchaseRule();
            this.StateHasChanged();
        }
        else
        {
            this.snackbar.Clear();
            this.snackbar.Configuration.PositionClass = Defaults.Classes.Position.BottomCenter;
            this.snackbar.Add("Failed to save.", Severity.Warning);
        }
    }
}

