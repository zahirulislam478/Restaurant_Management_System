// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RMS.BlazorApp.Models;

#nullable disable

namespace RMS.BlazorApp.Server.Migrations.RestaurantDb
{
    [DbContext(typeof(RestaurantDbContext))]
    partial class RestaurantDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RMS.BlazorApp.Models.Bill", b =>
                {
                    b.Property<int>("BillId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BillId"));

                    b.Property<decimal>("BillAmount")
                        .HasColumnType("money");

                    b.Property<DateTime?>("Date")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<bool>("IsPartialPayment")
                        .HasColumnType("bit");

                    b.Property<decimal>("PaidAmount")
                        .HasColumnType("money");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<string>("SupplierBillInvoiceNumber")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money");

                    b.HasKey("BillId");

                    b.HasIndex("PurchaseOrderId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Bills");

                    b.HasData(
                        new
                        {
                            BillId = 1,
                            BillAmount = 8725.00m,
                            Date = new DateTime(2023, 1, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPartialPayment = false,
                            PaidAmount = 5000.00m,
                            PurchaseOrderId = 1,
                            SupplierBillInvoiceNumber = "BILL-001",
                            SupplierId = 1,
                            TotalAmount = 3725.00m
                        },
                        new
                        {
                            BillId = 2,
                            BillAmount = 13125.00m,
                            Date = new DateTime(2023, 2, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPartialPayment = false,
                            PaidAmount = 10000.00m,
                            PurchaseOrderId = 2,
                            SupplierBillInvoiceNumber = "BILL-002",
                            SupplierId = 2,
                            TotalAmount = 3125.00m
                        },
                        new
                        {
                            BillId = 3,
                            BillAmount = 2250.00m,
                            Date = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IsPartialPayment = false,
                            PaidAmount = 1500.00m,
                            PurchaseOrderId = 3,
                            SupplierBillInvoiceNumber = "BILL-003",
                            SupplierId = 3,
                            TotalAmount = 750.00m
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Brand", b =>
                {
                    b.Property<int>("BrandId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("BrandId"));

                    b.Property<string>("BrandName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BrandId");

                    b.ToTable("Brands");

                    b.HasData(
                        new
                        {
                            BrandId = 1,
                            BrandName = "Brand A"
                        },
                        new
                        {
                            BrandId = 2,
                            BrandName = "Brand B"
                        },
                        new
                        {
                            BrandId = 3,
                            BrandName = "Brand C"
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.DailyMenu", b =>
                {
                    b.Property<int>("DailyMenuId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("DailyMenuId"));

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ServingDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<int>("ServingQuantity")
                        .HasColumnType("int");

                    b.HasKey("DailyMenuId");

                    b.HasIndex("RecipeId");

                    b.ToTable("DailyMenus");

                    b.HasData(
                        new
                        {
                            DailyMenuId = 1,
                            RecipeId = 1,
                            ServingDate = new DateTime(2023, 11, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServingQuantity = 4
                        },
                        new
                        {
                            DailyMenuId = 2,
                            RecipeId = 2,
                            ServingDate = new DateTime(2023, 11, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServingQuantity = 3
                        },
                        new
                        {
                            DailyMenuId = 3,
                            RecipeId = 3,
                            ServingDate = new DateTime(2023, 11, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ServingQuantity = 5
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.GenericProduct", b =>
                {
                    b.Property<int>("GenericProductId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("GenericProductId"));

                    b.Property<string>("GenericProductName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("GenericProductId");

                    b.ToTable("GenericProducts");

                    b.HasData(
                        new
                        {
                            GenericProductId = 1,
                            GenericProductName = "5-liter Rupchanda Oil"
                        },
                        new
                        {
                            GenericProductId = 2,
                            GenericProductName = "50 kg Bashundhara Atta"
                        },
                        new
                        {
                            GenericProductId = 3,
                            GenericProductName = "5 Kg Deshi Onion"
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.HasIndex("ItemId");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            InventoryId = 1,
                            ItemId = 1,
                            Quantity = 100
                        },
                        new
                        {
                            InventoryId = 2,
                            ItemId = 2,
                            Quantity = 150
                        },
                        new
                        {
                            InventoryId = 3,
                            ItemId = 3,
                            Quantity = 75
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Item", b =>
                {
                    b.Property<int>("ItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ItemId"));

                    b.Property<int>("BrandId")
                        .HasColumnType("int");

                    b.Property<int>("GenericProductId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MeasurementId")
                        .HasColumnType("int");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PurchaseRuleId")
                        .HasColumnType("int");

                    b.Property<int>("StorageTypeId")
                        .HasColumnType("int");

                    b.Property<decimal>("Weight")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("ItemId");

                    b.HasIndex("BrandId");

                    b.HasIndex("GenericProductId");

                    b.HasIndex("MeasurementId");

                    b.HasIndex("StorageTypeId");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            ItemId = 1,
                            BrandId = 1,
                            GenericProductId = 1,
                            IsAvailable = true,
                            ItemName = "Oil",
                            MeasurementId = 1,
                            Picture = "RupchandaOil.jpeg",
                            PurchaseRuleId = 1,
                            StorageTypeId = 1,
                            Weight = 5m
                        },
                        new
                        {
                            ItemId = 2,
                            BrandId = 2,
                            GenericProductId = 2,
                            IsAvailable = true,
                            ItemName = "Atta",
                            MeasurementId = 2,
                            Picture = "BashundharaAtta.webp",
                            PurchaseRuleId = 2,
                            StorageTypeId = 2,
                            Weight = 50m
                        },
                        new
                        {
                            ItemId = 3,
                            BrandId = 3,
                            GenericProductId = 3,
                            IsAvailable = true,
                            ItemName = "Onion",
                            MeasurementId = 3,
                            Picture = "Onion.jpg",
                            PurchaseRuleId = 3,
                            StorageTypeId = 3,
                            Weight = 10m
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Measurement", b =>
                {
                    b.Property<int>("MeasurementId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MeasurementId"));

                    b.Property<string>("MeasurementType")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("MeasurementId");

                    b.ToTable("Measurements");

                    b.HasData(
                        new
                        {
                            MeasurementId = 1,
                            MeasurementType = "Liter"
                        },
                        new
                        {
                            MeasurementId = 2,
                            MeasurementType = "Kg"
                        },
                        new
                        {
                            MeasurementId = 3,
                            MeasurementType = "Kg"
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.ProductReceive", b =>
                {
                    b.Property<int>("ProductReceiveId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProductReceiveId"));

                    b.Property<string>("CompanyName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ReceivedDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money");

                    b.HasKey("ProductReceiveId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("ProductReceives");

                    b.HasData(
                        new
                        {
                            ProductReceiveId = 1,
                            CompanyName = "Supplier X",
                            PurchaseOrderId = 1,
                            ReceivedDate = new DateTime(2023, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 1,
                            TotalAmount = 5000.00m
                        },
                        new
                        {
                            ProductReceiveId = 2,
                            CompanyName = "Supplier Y",
                            PurchaseOrderId = 2,
                            ReceivedDate = new DateTime(2023, 4, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 2,
                            TotalAmount = 7500.00m
                        },
                        new
                        {
                            ProductReceiveId = 3,
                            CompanyName = "Supplier Z",
                            PurchaseOrderId = 3,
                            ReceivedDate = new DateTime(2023, 5, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            SupplierId = 3,
                            TotalAmount = 3000.00m
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.PurchaseDetail", b =>
                {
                    b.Property<int>("PurchaseDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseDetailId"));

                    b.Property<DateTime?>("ExpireDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("OrderedQuantity")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseOrderId")
                        .HasColumnType("int");

                    b.HasKey("PurchaseDetailId");

                    b.HasIndex("ItemId");

                    b.HasIndex("PurchaseOrderId");

                    b.ToTable("PurchaseDetails");

                    b.HasData(
                        new
                        {
                            PurchaseDetailId = 1,
                            ExpireDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = 1,
                            OrderedQuantity = 50,
                            PurchaseOrderId = 1
                        },
                        new
                        {
                            PurchaseDetailId = 2,
                            ExpireDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = 2,
                            OrderedQuantity = 75,
                            PurchaseOrderId = 2
                        },
                        new
                        {
                            PurchaseDetailId = 3,
                            ExpireDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = 3,
                            OrderedQuantity = 60,
                            PurchaseOrderId = 3
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.PurchaseOrder", b =>
                {
                    b.Property<int>("PurchaseOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseOrderId"));

                    b.Property<int>("InvoiceNumber")
                        .HasColumnType("int");

                    b.Property<DateTime?>("PurchaseOrderDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<int>("PurchaseRuleId")
                        .HasColumnType("int");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalAmount")
                        .HasColumnType("money");

                    b.HasKey("PurchaseOrderId");

                    b.HasIndex("PurchaseRuleId");

                    b.HasIndex("SupplierId");

                    b.ToTable("PurchaseOrders");

                    b.HasData(
                        new
                        {
                            PurchaseOrderId = 1,
                            InvoiceNumber = 56789012,
                            PurchaseOrderDate = new DateTime(2023, 11, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchaseRuleId = 1,
                            SupplierId = 1,
                            TotalAmount = 8725.00m
                        },
                        new
                        {
                            PurchaseOrderId = 2,
                            InvoiceNumber = 32872280,
                            PurchaseOrderDate = new DateTime(2023, 11, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchaseRuleId = 2,
                            SupplierId = 2,
                            TotalAmount = 13125.00m
                        },
                        new
                        {
                            PurchaseOrderId = 3,
                            InvoiceNumber = 84938832,
                            PurchaseOrderDate = new DateTime(2023, 11, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            PurchaseRuleId = 3,
                            SupplierId = 3,
                            TotalAmount = 1320.00m
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.PurchaseRule", b =>
                {
                    b.Property<int>("PurchaseRuleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PurchaseRuleId"));

                    b.Property<int>("MaxOrderQuantity")
                        .HasColumnType("int");

                    b.Property<int>("PurchaseType")
                        .HasColumnType("int");

                    b.Property<string>("ReOrderLevel")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("PurchaseRuleId");

                    b.ToTable("PurchaseRules");

                    b.HasData(
                        new
                        {
                            PurchaseRuleId = 1,
                            MaxOrderQuantity = 100,
                            PurchaseType = 1,
                            ReOrderLevel = "High"
                        },
                        new
                        {
                            PurchaseRuleId = 2,
                            MaxOrderQuantity = 50,
                            PurchaseType = 3,
                            ReOrderLevel = "Low"
                        },
                        new
                        {
                            PurchaseRuleId = 3,
                            MaxOrderQuantity = 75,
                            PurchaseType = 2,
                            ReOrderLevel = "Medium"
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.ReceivedDetail", b =>
                {
                    b.Property<int>("ReceivedDetailId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReceivedDetailId"));

                    b.Property<DateTime?>("ExpireDate")
                        .IsRequired()
                        .HasColumnType("date");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("ProductReceiveId")
                        .HasColumnType("int");

                    b.Property<int>("ReceivedQuantity")
                        .HasColumnType("int");

                    b.Property<decimal>("TotalPrice")
                        .HasColumnType("money");

                    b.Property<decimal>("UnitOfPrice")
                        .HasColumnType("money");

                    b.Property<decimal>("Vat")
                        .HasColumnType("money");

                    b.HasKey("ReceivedDetailId");

                    b.HasIndex("ItemId");

                    b.HasIndex("ProductReceiveId");

                    b.ToTable("ReceivedDetails");

                    b.HasData(
                        new
                        {
                            ReceivedDetailId = 1,
                            ExpireDate = new DateTime(2024, 12, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = 1,
                            ProductReceiveId = 1,
                            ReceivedQuantity = 100,
                            TotalPrice = 5500.00m,
                            UnitOfPrice = 50.00m,
                            Vat = 5.00m
                        },
                        new
                        {
                            ReceivedDetailId = 2,
                            ExpireDate = new DateTime(2024, 11, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = 2,
                            ProductReceiveId = 2,
                            ReceivedQuantity = 200,
                            TotalPrice = 8800.00m,
                            UnitOfPrice = 40.00m,
                            Vat = 4.00m
                        },
                        new
                        {
                            ReceivedDetailId = 3,
                            ExpireDate = new DateTime(2025, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            ItemId = 3,
                            ProductReceiveId = 3,
                            ReceivedQuantity = 150,
                            TotalPrice = 9900.00m,
                            UnitOfPrice = 60.00m,
                            Vat = 6.00m
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"));

                    b.Property<int>("MeasurementId")
                        .HasColumnType("int");

                    b.Property<string>("RecipeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("RecipeQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ServingNumber")
                        .HasColumnType("int");

                    b.HasKey("RecipeId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            MeasurementId = 0,
                            RecipeName = "Vegetable Soup",
                            RecipeQuantity = 1,
                            ServingNumber = 4
                        },
                        new
                        {
                            RecipeId = 2,
                            MeasurementId = 0,
                            RecipeName = "Chicken Pasta",
                            RecipeQuantity = 1,
                            ServingNumber = 3
                        },
                        new
                        {
                            RecipeId = 3,
                            MeasurementId = 0,
                            RecipeName = "Fruit Salad",
                            RecipeQuantity = 1,
                            ServingNumber = 5
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.RecipeIngredient", b =>
                {
                    b.Property<int>("RecipeIngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeIngredientId"));

                    b.Property<int>("IngredientQuantity")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.HasKey("RecipeIngredientId");

                    b.HasIndex("ItemId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeIngredients");

                    b.HasData(
                        new
                        {
                            RecipeIngredientId = 1,
                            IngredientQuantity = 200,
                            ItemId = 1,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 2,
                            IngredientQuantity = 300,
                            ItemId = 2,
                            RecipeId = 1
                        },
                        new
                        {
                            RecipeIngredientId = 3,
                            IngredientQuantity = 150,
                            ItemId = 3,
                            RecipeId = 2
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Requisition", b =>
                {
                    b.Property<int>("RequisitionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RequisitionId"));

                    b.Property<int>("DailyMenuId")
                        .HasColumnType("int");

                    b.Property<int>("ItemId")
                        .HasColumnType("int");

                    b.Property<int>("MeasurementId")
                        .HasColumnType("int");

                    b.Property<int>("RequisitionQuantity")
                        .HasColumnType("int");

                    b.HasKey("RequisitionId");

                    b.HasIndex("DailyMenuId");

                    b.HasIndex("ItemId");

                    b.ToTable("Requisitions");

                    b.HasData(
                        new
                        {
                            RequisitionId = 1,
                            DailyMenuId = 1,
                            ItemId = 1,
                            MeasurementId = 0,
                            RequisitionQuantity = 10
                        },
                        new
                        {
                            RequisitionId = 2,
                            DailyMenuId = 2,
                            ItemId = 2,
                            MeasurementId = 0,
                            RequisitionQuantity = 8
                        },
                        new
                        {
                            RequisitionId = 3,
                            DailyMenuId = 3,
                            ItemId = 3,
                            MeasurementId = 0,
                            RequisitionQuantity = 12
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.StorageType", b =>
                {
                    b.Property<int>("StorageTypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("StorageTypeId"));

                    b.Property<string>("SpecialRequirement")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("StorageTypeName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("StorageTypeId");

                    b.ToTable("StorageTypes");

                    b.HasData(
                        new
                        {
                            StorageTypeId = 1,
                            SpecialRequirement = "None",
                            StorageTypeName = "Dry Storage"
                        },
                        new
                        {
                            StorageTypeId = 2,
                            SpecialRequirement = "Temperature: 4°C",
                            StorageTypeName = "Refrigerated Storage"
                        },
                        new
                        {
                            StorageTypeId = 3,
                            SpecialRequirement = "Temperature: -18°C",
                            StorageTypeName = "Freezer Storage"
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("ContactNo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SupplierName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SupplierId");

                    b.ToTable("Suppliers");

                    b.HasData(
                        new
                        {
                            SupplierId = 1,
                            Address = "123 Main Street",
                            ContactNo = "555-123-4567",
                            SupplierName = "Supplier A"
                        },
                        new
                        {
                            SupplierId = 2,
                            Address = "456 Elm Street",
                            ContactNo = "555-987-6543",
                            SupplierName = "Supplier B"
                        },
                        new
                        {
                            SupplierId = 3,
                            Address = "789 Oak Street",
                            ContactNo = "555-456-7890",
                            SupplierName = "Supplier C"
                        });
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Bill", b =>
                {
                    b.HasOne("RMS.BlazorApp.Models.PurchaseOrder", "PurchaseOrders")
                        .WithMany("Bills")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.BlazorApp.Models.Supplier", "Suppliers")
                        .WithMany("Bills")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOrders");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.DailyMenu", b =>
                {
                    b.HasOne("RMS.BlazorApp.Models.Recipe", "Recipes")
                        .WithMany("DailyMenus")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipes");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Inventory", b =>
                {
                    b.HasOne("RMS.BlazorApp.Models.Item", "Item")
                        .WithMany("Inventories")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Item", b =>
                {
                    b.HasOne("RMS.BlazorApp.Models.Brand", "Brands")
                        .WithMany("Items")
                        .HasForeignKey("BrandId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.BlazorApp.Models.GenericProduct", "GenericProducts")
                        .WithMany("Items")
                        .HasForeignKey("GenericProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.BlazorApp.Models.Measurement", "Measurements")
                        .WithMany("Items")
                        .HasForeignKey("MeasurementId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.BlazorApp.Models.StorageType", "StorageType")
                        .WithMany("Items")
                        .HasForeignKey("StorageTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Brands");

                    b.Navigation("GenericProducts");

                    b.Navigation("Measurements");

                    b.Navigation("StorageType");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.ProductReceive", b =>
                {
                    b.HasOne("RMS.BlazorApp.Models.PurchaseOrder", "PurchaseOrders")
                        .WithMany("ProductReceives")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.PurchaseDetail", b =>
                {
                    b.HasOne("RMS.BlazorApp.Models.Item", "Item")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.BlazorApp.Models.PurchaseOrder", "PurchaseOrders")
                        .WithMany("PurchaseDetails")
                        .HasForeignKey("PurchaseOrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.PurchaseOrder", b =>
                {
                    b.HasOne("RMS.BlazorApp.Models.PurchaseRule", "PurchaseRules")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("PurchaseRuleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.BlazorApp.Models.Supplier", "Suppliers")
                        .WithMany("PurchaseOrders")
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PurchaseRules");

                    b.Navigation("Suppliers");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.ReceivedDetail", b =>
                {
                    b.HasOne("RMS.BlazorApp.Models.Item", "Items")
                        .WithMany("ReceivedDetails")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.BlazorApp.Models.ProductReceive", "ProductReceives")
                        .WithMany("ReceivedDetails")
                        .HasForeignKey("ProductReceiveId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Items");

                    b.Navigation("ProductReceives");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.RecipeIngredient", b =>
                {
                    b.HasOne("RMS.BlazorApp.Models.Item", "Item")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.BlazorApp.Models.Recipe", "Recipe")
                        .WithMany("RecipeIngredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Item");

                    b.Navigation("Recipe");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Requisition", b =>
                {
                    b.HasOne("RMS.BlazorApp.Models.DailyMenu", "DailyMenus")
                        .WithMany("Requisitions")
                        .HasForeignKey("DailyMenuId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RMS.BlazorApp.Models.Item", "Items")
                        .WithMany("Requisitions")
                        .HasForeignKey("ItemId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("DailyMenus");

                    b.Navigation("Items");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Brand", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.DailyMenu", b =>
                {
                    b.Navigation("Requisitions");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.GenericProduct", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Item", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("PurchaseDetails");

                    b.Navigation("ReceivedDetails");

                    b.Navigation("RecipeIngredients");

                    b.Navigation("Requisitions");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Measurement", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.ProductReceive", b =>
                {
                    b.Navigation("ReceivedDetails");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.PurchaseOrder", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("ProductReceives");

                    b.Navigation("PurchaseDetails");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.PurchaseRule", b =>
                {
                    b.Navigation("PurchaseOrders");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Recipe", b =>
                {
                    b.Navigation("DailyMenus");

                    b.Navigation("RecipeIngredients");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.StorageType", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("RMS.BlazorApp.Models.Supplier", b =>
                {
                    b.Navigation("Bills");

                    b.Navigation("PurchaseOrders");
                });
#pragma warning restore 612, 618
        }
    }
}
